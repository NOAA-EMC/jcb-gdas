time window:
  begin: '2021-07-31T21:00:00Z'
  length: PT6H
  bound to include: begin

geometry:
  fms initialization:
    namelist filename: fv3files/fmsmpp.nml
    field table filename: fv3files/field_table
  akbk: fv3files/akbk.nc4
  npx: 769
  npy: 769
  npz: 127
  field metadata override: fv3files/gfs-restart.yaml
# layout: [5,5]
  layout: [2,2]
state:
  datetime: 2021-08-01T00:00:00Z
  filetype: fms restart
  datapath: bkg/2021080100
  filename_core: 20210801.000000.fv_core.res.nc
  filename_trcr: 20210801.000000.fv_tracer.res.nc
  filename_sfcd: 20210801.000000.sfc_data.nc
  filename_sfcw: 20210801.000000.fv_srf_wnd.res.nc
  filename_cplr: 20210801.000000.coupler.res
  state variables: [u,v,ua,va,T,DELP,sphum,ice_wat,liq_wat,o3mr,phis,
                    slmsk,sheleg,tsea,vtype,stype,vfrac,stc,smc,snwdph,
                    u_srf,v_srf,f10m]
                    # u_srf,v_srf,f10m,sss]

observations:
  observers:
  - obs space:
      name: Aircraft
      obsdatain:
        engine:
          type: H5File
          obsfile: /work2/noaa/da/esposito/ufoeval/GSIobserver_NE_ADC/2021080100/ioda/obs/aircraft_obs_2021080100.nc4 
        obsgrouping:
          group variables: ["stationIdentification"]
          sort variable: "pressure"
          sort order: "descending"
      obsdataout:
        engine:
          type: H5File
          obsfile: /work2/noaa/da/nesposito/BufrConverterTest_aircraft/diags/2021080100/diags_aircft_prepbufr.2021080100_NoObsErrorFactorConventional.nc
#    io pool:
#      max pool size: 1
      simulated variables: [windEastward, windNorthward, airTemperature] #, specificHumidity]
  geovals:
    filename: /work2/noaa/da/esposito/ufoeval/GSIobserver_NE_ADC/2021080100/ioda/geovals/aircraft_geoval_2021080100.nc4
  
    obs operator:
      name: VertInterp
      #observation alias file: '{{experiment_root}}/{{experiment_id}}/configuration/jedi/interfaces/{{model_component}}/observations/obsop_name_map.yaml'
      observation alias file: '/work2/noaa/da/acollard/git/GDASApp/parm/atm/obs/testing/swell/obsop_name_map.yaml' # Hard coded name to test
      apply near surface wind scaling: true
  
    obs pre filters:
    
    # Initially assign a value of 2.0 to all ObsError/airTemperature
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      action:
        name: assign error
        error parameter: 2.0
    
    # Assign the initial observation error, based on pressure (for AIREP/ACARS; itype=130)
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      action:
        name: assign error
        error function:
          name: ObsFunction/ObsErrorModelStepwiseLinear
          options:
            xvar:
              name: MetaData/pressure
            xvals: [100000, 95000, 90000, 85000, 80000]
            errors: [2.5, 2.3, 2.1, 1.9, 1.7]  # NickE from prepobs_errtable.global
      where:
      - variable:
          name: ObsType/airTemperature
        is_in: 130
    
    # Assign the initial observation error, based on pressure (for AMDAR and MDCRS; itype=131,133)
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      action:
        name: assign error
        error function:
          name: ObsFunction/ObsErrorModelStepwiseLinear
          options:
            xvar:
              name: MetaData/pressure
            xvals: [100000, 95000, 90000, 85000, 80000]
            errors: [1.4706, 1.3529, 1.2353, 1.1176, 1.0] # NickE from prepobs_errtable.global
      where:
      - variable:
          name: ObsType/airTemperature
        is_in: 131,133
    
    # Assign the initial observation error, based on pressure (for RECON aircraft; itype=132)
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      action:
        name: assign error
        error function:
          name: ObsFunction/ObsErrorModelStepwiseLinear
          options:
            xvar:
              name: MetaData/pressure
            xvals: [105000, 100000, 95000, 90000, 85000, 70000, 65000, 60000, 40000, 35000, 30000, 25000, 20000, 5000]
            errors: [1.5,  1.3,    1.1,   0.9,   0.8,   0.8,   0.75,  0.7,   0.7,   0.75,  0.85,  1.3,   1.5,   1.5]  #NickE close to prepobs_errtable.global but not the same
      where:
      - variable:
          name: ObsType/airTemperature
        is_in: 132
    
    # Assign the initial observation error, based on pressure (for TAMDAR itype=134)
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      action:
        name: assign error
        error function:
          name: ObsFunction/ObsErrorModelStepwiseLinear
          options:
            xvar:
              name: MetaData/pressure
            xvals: [100000, 95000, 90000, 85000, 80000, 60000, 40000]
            errors: [1.5,   1.35,  1.25,  1.10,  1.0,   1.3,   1.7]  #NickE from prepobs.errtable_global
      where:
      - variable:
          name: ObsType/airTemperature
        is_in: 134
    
    # Assign the initial observation error, based on pressure (for Canadian AMDAR itype=135)
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      action:
        name: assign error
        error function:
          name: ObsFunction/ObsErrorModelStepwiseLinear
          options:
            xvar:
              name: MetaData/pressure
            xvals: [100000, 95000, 90000, 85000, 80000]
            errors: [1.4706, 1.3529, 1.2353, 1.1176, 1000000000.0 ]  #NickE from prepobs.errtable_global
      where:
      - variable:
          name: ObsType/airTemperature
        is_in: 135
    
    # Assign initial wind observation error of 3.0 to all obs
    - filter: Perform Action
      filter variables:
      - name: windEastward
      - name: windNorthward
      action:
        name: assign error
        error parameter: 3.0

    
    # Assign initial wind observation error for Type 230 (AIREP/PIREP)
    - filter: Perform Action
      filter variables:
      - name: windEastward
      - name: windNorthward
      action:
        name: assign error
        error parameter: 3.6
      where:
      - variable:
          name: ObsType/windEastward
        is_in: 230
    
    # Assign initial wind observation error for Type 231 (AMDAR)
    - filter: Perform Action
      filter variables:
      - name: windEastward
      - name: windNorthward
      action:
        name: assign error
        error parameter: 3.0
      where:
      - variable:
          name: ObsType/windEastward
        is_in: 231
    
    # Assign initial wind observation error for Type 232 (RECON aircraft), based on pressure
    - filter: Perform Action
      filter variables:
      - name: windEastward
      - name: windNorthward
      action:
        name: assign error
        error function:
          name: ObsFunction/ObsErrorModelStepwiseLinear
          options:
            xvar:
              name: MetaData/pressure
            xvals: [110000, 105000, 100000, 95000, 90000, 85000, 80000, 75000, 70000, 65000, 60000, 55000, 50000, 45000, 40000, 35000, 30000, 25000, 20000, 15000, 10000, 7500, 5000, 4000, 3000, 2000, 1000, 500, 400, 300, 200, 100, 0]   #Pressure (Pa)
            errors: [2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.5, 2.6, 2.7, 2.8, 2.95, 3.1, 3.25, 3.4, 3.175, 2.95, 2.725, 2.5, 2.6, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7]
      where:
      - variable:
          name: ObsType/windEastward
        is_in: 232
    
    # Assign initial wind observation error for Type 233 (MDCRS)
    - filter: Perform Action
      filter variables:
      - name: windEastward
      - name: windNorthward
      action:
        name: assign error
        error parameter: 2.5
      where:
      - variable:
          name: ObsType/windEastward
        is_in: 233
    
    # Assign initial wind observation error for Type 234 (TAMDAR)
    - filter: Perform Action
      filter variables:
      - name: windEastward
      - name: windNorthward
      action:
        name: assign error
        error parameter: 3.0
      where:
      - variable:
          name: ObsType/windEastward
        is_in: 234
    
    # Assign initial wind observation error for Type 235 (Canadian AMDAR)
    - filter: Perform Action
      filter variables:
      - name: windEastward
      - name: windNorthward
      action:
        name: assign error
        error parameter: 3.0
      where:
      - variable:
          name: ObsType/windEastward
        is_in: 235
    
    obs prior filters:
    
    # Apply variable changes needed for performing wind scaling
    # BTH: turned off, getting an error that this tranform function does not exist
    # ---------------------------------------------------------
    #- filter: Variable Transforms
    #  Transform: SurfaceWindScalingPressure
    #  SkipWhenNoObs: False
    
    # Reassign any AIREP/PIREP (type=130) airTemperature MetaData/stationIdentification to 'KX130   '
    - filter: Variable Assignment
      where:
      - variable:
          name: ObsType/airTemperature
        is_in: 130
      assignments:
      - name: MetaData/stationIdentification
        value: 'KX130   '
    
    # The BiasCorrectionTerm/constantPredictor can be pulled directly
    # from the BiasCoefficientValue/constantPredictor, since the
    # term is just the coefficient value * 1.
    - filter: Variable Assignment
      assignments:
      - name: BiasCorrectionTerm/constantPredictor
        type: float
        function:
          name: ObsFunction/DrawValueFromFile
          options:
#            file: !ENV aircraft_abias_air_constant.${GDATE}.csv
            file: /work2/noaa/da/acollard/UFO_eval/data/gsi_geovals_l127/nofgat_aug2021/20230811/bc/aircraft_abias_air_constant.2021073118.csv 
            group: BiasCoefficientValue
            interpolation:
            - name: MetaData/stationIdentification
              method: exact
    
    # The BiasCorrectionTerm/ascentPredictor requires use of
    # ObsFunction/AircraftBiasCorrectionTerm to combine the coefficient
    # with the predictor value, so for now we assign the coefficient to
    # its own variable.
    - filter: Variable Assignment
      assignments:
      - name: BiasCoefficientValue/ascentPredictor
        type: float
        function:
          name: ObsFunction/DrawValueFromFile
          options:
#            file: !ENV aircraft_abias_air_ascent.${GDATE}.csv
            file: /work2/noaa/da/acollard/UFO_eval/data/gsi_geovals_l127/nofgat_aug2021/20230811/bc/aircraft_abias_air_ascent.2021073118.csv
            group: BiasCoefficientValue
            interpolation:
            - name: MetaData/stationIdentification
              method: exact
    
    # The BiasCorrectionTerm/ascentSquaredPredictor requires use of
    # ObsFunction/AircraftBiasCorrectionTerm to combine the coefficient
    # with the predictor value raised to order=2, so for now we assign
    # the coefficient to its own variable.
    - filter: Variable Assignment
      assignments:
      - name: BiasCoefficientValue/ascentSquaredPredictor
        type: float
        function:
          name: ObsFunction/DrawValueFromFile
          options:
#            file: !ENV aircraft_abias_air_ascentSquared.${GDATE}.csv
            file: /work2/noaa/da/acollard/UFO_eval/data/gsi_geovals_l127/nofgat_aug2021/20230811/bc/aircraft_abias_air_ascentSquared.2021073118.csv
            group: BiasCoefficientValue
            interpolation:
            - name: MetaData/stationIdentification
              method: exact
    
    # Reassign any ascent predictor to zero where  MetaData/windUpward >50.
    # BTH: This needs to be changed to reassign values >30. to a value of 30.
    # BTH: We also need to add a block to reassign values of <-30. to a value of 30., which is
    #      a likely error in the GSI but establishes parity (probably should reassign to a value
    #      of -30. instead)
    - filter: Variable Assignment
      where:
      - variable:
          name: MetaData/windUpward
        minvalue: 30.
      assignments:
      - name: MetaData/windUpward
        value: 30.
    - filter: Variable Assignment
      where:
      - variable:
          name: MetaData/windUpward
        maxvalue: -30.
      assignments:
      - name: MetaData/windUpward
        value: 30.
    
    # Compute the BiasCorrectionTerm/ascentPredictor as
    # coefficient * predictor (order=1)
    - filter: Variable Assignment
      assignments:
      - name: BiasCorrectionTerm/ascentPredictor
        type: float
        function:
          name: ObsFunction/AircraftBiasCorrectionTerm
          options:
            coeff_grpvarname: BiasCoefficientValue/ascentPredictor
            predi_grpvarname: MetaData/windUpward
            predi_order: 1.
    
    # Compute the BiasCorrectionTerm/ascentSquaredPredictor as
    # coefficient * predictor (order=2)
    - filter: Variable Assignment
      assignments:
      - name: BiasCorrectionTerm/ascentSquaredPredictor
        type: float
        function:
          name: ObsFunction/AircraftBiasCorrectionTerm
          options:
            coeff_grpvarname: BiasCoefficientValue/ascentSquaredPredictor
            predi_grpvarname: MetaData/windUpward
            predi_order: 2.
    
    
    
    obs post filters:
    
    # ------------------
    # airTemperature BC
    # ------------------
    
    # Use ObsFunction/LinearCombination to combine ObsValue/airTemperature with the
    # BiasCorrectionPredictor/<predictor> variables to produce a bias-corrected
    # HofX
    - filter: Variable Assignment
      assignments:
      - name: HofXBc/airTemperature
        type: float
        function:
          name: ObsFunction/LinearCombination
          options:
            variables: [HofX/airTemperature, BiasCorrectionTerm/constantPredictor, BiasCorrectionTerm/ascentPredictor, BiasCorrectionTerm/ascentSquaredPredictor]
            coefs: [1.0, 1.0, 1.0, 1.0]
      defer to post: true
    
    # ------------------
    # airTemperature
    # --------------
    
    # Reject all obs with PreQC mark already set above 3 - for noiqc=false QC limit=4
    # GSI/read_prepbufr.f90 Lines 576-587:
    # !  Set qc limits based on noiqc flag
    # if (noiqc) then
    #     lim_qm=8
    #     if (psob)         lim_zqm=7
    #     if (qob.or.tdob)  lim_tqm=7
    #     if (tob)          lim_qqm=8
    # else
    #     lim_qm=4
    #     if (psob)         lim_zqm=4
    #     if (qob.or.tdob)  lim_tqm=4
    #     if (tob)          lim_qqm=4
    # endif
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      where:
      - variable: PreQC/airTemperature
        minvalue: 4
      action:
        name: reject
    
    # When multiple obs exist within a single vertical model level, inflate ObsError
    # NOTE: This function appears to have differences with the GSI errmod_aircraft() function,
    #       it is not clear which of these differences can be rectified.
#    - filter: Perform Action
#      filter variables:
#      - name: airTemperature
#      action:
#        name: inflate error
#        inflation variable:
#          name: ObsFunction/ObsErrorFactorConventional
#          options:
#            test QCflag: PreQC
#            inflate variables: [airTemperature]
#            pressure: MetaData/pressure
#            distance threshold: 60000.0
#    # Make a variable to track error-inflation due to conventional-check
#    - filter: Variable Assignment
#      assignments:
#      - name: ObsErrorConventionalFactor/airTemperature
#        type: float
#        function:
#          name: ObsFunction/ObsErrorFactorConventional
#          options:
#            test QCflag: PreQC
#            inflate variables: [airTemperature]
#            pressure: MetaData/pressure
#            distance threshold: 60000.0
    
    # Inflate error for airTemperature obs with PreQC/airTemperature of 3 or 7
    #
    # GSI/read_prepbufr Lines 2064, 2221
    # 2064: if (qm==3 .or. qm==7) inflate_error=.true.
    # 2221: if (inflate_error) toe=toe*r1_2
    - filter: Perform Action
      action:
        name: inflate error
        inflation factor: 1.2
      filter variables:
      - name: airTemperature
      where:
      - variable:
          name: PreQC/airTemperature
        is_in: 3,7
    
    # Inflate error for airTemperature obs with MetaData/pressure less than 100 hPa
    #
    # GSI/read_prepbufr Line 2222
    #
    # if(ppb < r100)toe=toe*r1_2
    #
    - filter: Perform Action
      action:
        name: inflate error
        inflation factor: 1.2
      filter variables:
      - name: airTemperature
      where:
      - variable:
          name: MetaData/pressure
        maxvalue: 10000.
    
    # Inflate kx130 error for airTemperature obs with MetaData/pressure greater than 500 hPa
    #
    # GSI/read_prepbufr.f90 Line 2223
    #
    # if (aircraft_t_bc .and. kx==130 .and. ppb>=500.0_r_kind) toe=toe*r10
    #
    
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      where:
      - variable: ObsType/airTemperature
        is_in: 130
      - variable: MetaData/pressure
        minvalue: 50000.0
      action:
        name: inflate error
        inflation factor: 10.0
    
    # Make a copy of ObsError/airTemperature called UfoAdjustObsError/airTemperature, for storing current "adjust" errors
    - filter: Variable Assignment
      assignments:
      - name: UfoAdjustObsError/airTemperature
        type: float  # type must be specified if the variable doesn't already exist
        source variable: ObsError/airTemperature
    
    # Make a copy of GsiAdjustObsError called GsiAdjustObsError2, for storing inflated error from ObsErrorFactorPressureCheck
    - filter: Variable Assignment
      assignments:
      - name: GsiAdjustObsError2/airTemperature
        type: float  # type must be specified if the variable doesn't already exist
        source variable: GsiAdjustObsError/airTemperature
    
    #
    # Shortcut: reassign current obs error to GSI "adjust" error
    #
    # Reassign obs error to copy of GsiAdjustObsError
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      action:
        name: assign error
        error function: 
          name: ObsFunction/LinearCombination
          options:
            variables: [GsiAdjustObsError2/airTemperature]
            coefs: [1.0]
    
    # Inflate ob-error based on pressure check (penalize observations too close to model top or bottom)
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      action:
        name: inflate error
        inflation variable:
          name: ObsFunction/ObsErrorFactorPressureCheck
          options:
            variable: airTemperature
            inflation factor: 8.0  # 4.0 for wind observations, 8.0 for temperature/humidity observations
            geovar_sfc_geomz: surface_altitude 
            test_qcflag: PreUseFlag
    # Make a variable to store pressure check inflation
    - filter: Variable Assignment
      assignments:
      - name: ObsErrorPressureFactor/airTemperature
        type: float
        function:
          name: ObsFunction/ObsErrorFactorPressureCheck
          options:
            variable: airTemperature
            inflation factor: 8.0
            geovar_sfc_geomz: surface_altitude
            test_qcflag: PreUseFlag
    
    # inflate error for tails with uninitialized bias coefficients (i.e. all coefficients equal to zero)
    # NOTE: Since the ObsFunction/DrawValueFromFile system used in offline bias correction assigns a zero
    #       to all predictor coefficients for a tail-number not in the coefficients file, this filter will
    #       correctly apply a 1.2 factor to the observation error for both unknown tail-numbers as well as
    #       tail-numbers that are "new" (registered in coefficients file but have yet to be assigned
    #       coefficients other than the initial zero-values)
    - filter: Perform Action
      action:
        name: inflate error
        inflation factor: 1.2
      filter variables:
      - name: airTemperature
      where:
      - variable:
          name: BiasCorrectionTerm/constantPredictor
        is_close_to_any_of: [0.0]
        absolute_tolerance: 1.0e-6
      - variable:
          name: BiasCoefficientValue/ascentPredictor
        is_close_to_any_of: [0.0]
        absolute_tolerance: 1.0e-6
      - variable:
          name: BiasCoefficientValue/ascentSquaredPredictor
        is_close_to_any_of: [0.0]
        absolute_tolerance: 1.0e-6
    
    # Apply guard-rails to airTemperature ObsErrors and write to a separate variable
    - filter: Variable Assignment
      assignments:
      - name: ObsErrorBound/airTemperature
        type: float
        function:
          name: ObsFunction/ObsErrorBoundConventional
          options:
            obsvar: airTemperature
            obserr_bound_min: 1.3
            obserr_bound_max: 5.6
            obserr_bound_factor: 7.0  # cgross
    # Penalize obserr_bound_factor by factor of 0.7 if PreQC/airTemperature is 3
    - filter: Variable Assignment
      where:
      - variable: PreQC/airTemperature
        is_in: [3]
      assignments:
      - name: ObsErrorBound/airTemperature
        type: float
        function:
          name: ObsFunction/ObsErrorBoundConventional
          options:
            obsvar: airTemperature
            obserr_bound_min: 1.3
            obserr_bound_max: 5.6
            obserr_bound_factor: 4.9  # cgross
    
    
    # Gross check as a Background Check, utilizing threshold applied to ObsErrorBound/airTemperature
    # Writing value to GrossCheck/airTemperature for now
    - filter: Background Check
      filter variables:
      - name: airTemperature
      function absolute threshold:
      - name: ObsErrorBound/airTemperature
      test_hofx: HofXBc
      action:
        name: reject
    
    # Duplicate factor
#    - filter: Perform Action
#      filter variables:
#      - name: airTemperature
#      action:
#        name: inflate error
#        inflation variable:
#          name: ObsFunction/ObsErrorFactorDuplicateCheck
#          options:
#            use_air_pressure: true
#            variable: airTemperature
    # Additional error inflation of 1.25, as per GSI/setupt.f90 Line 1038:
    #
    # if(nvqc .and. ibeta(ikx) >0  ) ratio_errors=0.8_r_kind*ratio_errors
    #
    # This 0.8 factor is applied to the inverse-error, thus inflation if 1.0/0.8=1.25
    # Because this is dependent on the value of ibeta(ikx), this inflation can be
    # dependent on ob-type. In the case of aircraft temperature observations, per the
    # global_convinfo.txt file, ib>0 for all types EXCEPT types 134 and 135, which are 0.
    - filter: Perform Action
      filter variables:
      - name: airTemperature
      where:
      - variable: ObsType/airTemperature
        is_not_in: 134,135
      action:
        name: inflate error
        inflation factor: 1.25
    
    # -------------------------------
    # windEastward and windNorthward
    # -------------------------------
    
    # Reject all obs with PreQC mark already set above 3 - for noiqc=false QC limit=4
    # GSI/read_prepbufr.f90 Lines 576-587:
    # !  Set qc limits based on noiqc flag
    # if (noiqc) then
    #     lim_qm=8
    #     if (psob)         lim_zqm=7
    #     if (qob.or.tdob)  lim_tqm=7
    #     if (tob)          lim_qqm=8
    # else
    #     lim_qm=4
    #     if (psob)         lim_zqm=4
    #     if (qob.or.tdob)  lim_tqm=4
    #     if (tob)          lim_qqm=4
    # endif
    - filter: Perform Action
      filter variables:
      - name: windEastward
      - name: windNorthward
      where:
      - variable: PreQC/windEastward
        minvalue: 4
      action:
        name: reject
    
    # When multiple obs exist within a single vertical model level, inflate ObsError
    # NOTE: This function appears to have differences with the GSI errmod_aircraft() function,
    #       it is not clear which of these differences can be rectified.
    #- filter: Perform Action
    #  filter variables:
    #  - name: windEastward
    #  - name: windNorthward
    #  action:
    #    name: inflate error
    #    inflation variable:
    #      name: ObsFunction/ObsErrorFactorConventional
    #      options:
    #        test QCflag: PreQC
    #        inflate variables: [windEastward, windNorthward]
    #        pressure: MetaData/pressure
    #        distance threshold: 60000.0
    
    # Inflate error for airTemperature obs with PreQC/airTemperature of 3 or 7
    #
    # GSI/read_prepbufr Lines 2064, 2300
    # 2064: if (qm==3 .or. qm==7) inflate_error=.true.
    # 2300: if (inflate_error) woe=woe*r1_2
    - filter: Perform Action
      action:
        name: inflate error
        inflation factor: 1.2
      filter variables:
      - name: windEastward
      - name: windNorthward
      where:
      - variable:
          name: PreQC/windEastward
        is_in: 3,7
    
    # Inflate error for windEastward, windNorthward obs with MetaData/pressure less than 50 hPa
    #
    # GSI/read_prepbufr Line 2301
    #
    # if(obsdat(1,k) < r50) woe=woe*r1_2
    - filter: Perform Action
      action:
        name: inflate error
        inflation factor: 1.2
      filter variables:
      - name: windEastward
      - name: windNorthward
      where:
      - variable:
          name: MetaData/pressure
        maxvalue: 5000.
    
    # Inflate ob-error based on pressure check (penalize observations too close to model top or bottom)
    # GSI/setup2.f90 L 875
    - filter: Perform Action
      filter variables:
      - name: windEastward
      action:
        name: inflate error
        inflation variable:
          name: ObsFunction/ObsErrorFactorPressureCheck
          options:
            variable: windEastward
            inflation factor: 4.0  # 4.0 for wind observations, 8.0 for temperature/humidity observations
            geovar_sfc_geomz: surface_altitude
            test_qcflag: PreUseFlag
    - filter: Perform Action
      filter variables:
      - name: windNorthward
      action:
        name: inflate error
        inflation variable:
          name: ObsFunction/ObsErrorFactorPressureCheck
          options:
            variable: windNorthward
            inflation factor: 4.0  # 4.0 for wind observations, 8.0 for temperature/humidity observations
            geovar_sfc_geomz: surface_altitude
            test_qcflag: PreUseFlag
    
    
    
    # Reject aircraft wind observations (Type 230-239) with MetaData/pressure < 126 hPa
    # GSI/setupw.f90 L 932-934
    #
    # if(itype >=230 .and. itype <=239 .and.  presw <126.0_r_kind ) then
    #     error=zero
    # endif
    - filter: Perform Action
      filter variables:
      - name: windEastward
      - name: windNorthward
      where:
      - variable: MetaData/pressure
        maxvalue: 12599.
      - variable: ObsType/windEastward
        is_in: 230-239
      action:
        name: reject
    
    # Perform a gross error check with ObsFunction/WindsSPDBCheck
    # This is required, not because of the speed-bias corrections (which only apply to selected satwinds), but
    # because the residual used in the gross error check for winds is computed differently than for other variables,
    # since winds have 2 components. Resid = sqrt(omb_u**2 + omb_v**2)
    - filter: Background Check
      filter variables:
      - name: windEastward
      where:
      - variable: PreQC/windEastward
        is_not_in: [3]
      function absolute threshold:
      - name: ObsFunction/WindsSPDBCheck
        options:
          wndtype: [  230,  231,  232,  233,  234,  235]
          cgross:  [  6.0,  6.5,  7.0,  7.5,  7.5,  7.5]
          error_min: [1.4,  1.4,  1.4,  1.4,  1.4,  1.4]
          error_max: [6.1,  6.1,  6.1,  6.1,  6.1,  6.1]
          variable: windEastward
      action:
        name: reject
    - filter: Background Check
      filter variables:
      - name: windEastward
      where:
      - variable: PreQC/windEastward
        is_in: [3]
      function absolute threshold:
      - name: ObsFunction/WindsSPDBCheck
        options:
          wndtype: [  230,  231,  232,  233,  234,  235]
          cgross:  [  4.2,  4.55, 4.9,  5.25, 5.25, 5.25]
          error_min: [1.4,  1.4,  1.4,  1.4,  1.4,  1.4]
          error_max: [6.1,  6.1,  6.1,  6.1,  6.1,  6.1]
          variable: windEastward
      action:
        name: reject
    - filter: Background Check
      filter variables:
      - name: windNorthward
      where:
      - variable: PreQC/windNorthward
        is_not_in: [3]
      function absolute threshold:
      - name: ObsFunction/WindsSPDBCheck
        options:
          wndtype: [  230,  231,  232,  233,  234,  235]
          cgross:  [  6.0,  6.5,  7.0,  7.5,  7.5,  7.5]
          error_min: [1.4,  1.4,  1.4,  1.4,  1.4,  1.4]
          error_max: [6.1,  6.1,  6.1,  6.1,  6.1,  6.1]
          variable: windNorthward
      action:
        name: reject
    - filter: Background Check
      filter variables:
      - name: windNorthward
      where:
      - variable: PreQC/windNorthward
        is_in: [3]
      function absolute threshold:
      - name: ObsFunction/WindsSPDBCheck
        options:
          wndtype: [  230,  231,  232,  233,  234,  235]  
          cgross:  [  4.2,  4.55, 4.9,  5.25, 5.25, 5.25]
          error_min: [1.4,  1.4,  1.4,  1.4,  1.4,  1.4] 
          error_max: [6.1,  6.1,  6.1,  6.1,  6.1,  6.1]
          variable: windNorthward
      action:
        name: reject
    
