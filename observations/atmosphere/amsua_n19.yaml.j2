-

  # Observation Space (I/O)
  # -----------------------
  obs space:
    name: AMSUA N19
    obsdatain:
      engine:
        type: H5File
        obsfile: "{{atm_obsdatain_path}}/{{atm_obsdatain_prefix}}{{observation_from_jcb}}{{atm_obsdatain_suffix}}"
    obsdataout:
      engine:
        type: H5File
        obsfile: "{{atm_obsdataout_path}}/{{atm_obsdataout_prefix}}{{observation_from_jcb}}{{atm_obsdataout_suffix}}"
    io pool:
      max pool size: 1
    simulated variables: [brightnessTemperature]
    channels: &{{observation_from_jcb}}_simulated_channels {{ get_satellite_variable(observation_from_jcb, "simulated") }}

  # Observation Operator
  # --------------------
  obs operator:
    name: CRTM
    Absorbers: [H2O, O3]
    Clouds: [Water, Ice]
    Cloud_Fraction: 1.0
    obs options:
      Sensor_ID: &{{observation_from_jcb}}_sensor_id amsua_n19
      EndianType: little_endian
      CoefficientPath: "{{crtm_coefficient_path}}"

  # Observation Bias Correction (VarBC)
  # -----------------------------------
  obs bias:
    input file: "{{atm_obsbiasin_path}}/{{atm_obsbiasin_prefix}}{{observation_from_jcb}}{{atm_obsbiasin_suffix}}"
    output file: "{{atm_obsbiasout_path}}/{{atm_obsbiasout_prefix}}{{observation_from_jcb}}{{atm_obsbiasout_suffix}}"
    variational bc:
      predictors:
      - name: constant
      - name: lapseRate
        order: 2
        tlapse: &{{observation_from_jcb}}_tlapse "{{atm_obsbiasin_path}}/{{atm_obstlapsein_prefix}}{{observation_from_jcb}}{{atm_obstlapsein_suffix}}"
      - name: lapseRate
        tlapse: *{{observation_from_jcb}}_tlapse
      - name: emissivityJacobian
      - name: sensorScanAngle
        order: 4
      - name: sensorScanAngle
        order: 3
      - name: sensorScanAngle
        order: 2
      - name: sensorScanAngle
    covariance:
      minimal required obs number: 20
      variance range: [1.0e-6, 10.0]
      step size: 1.0e-4
      largest analysis variance: 10000.0
      prior:
        input file: "{{atm_obsbiasin_path}}/{{atm_obsbiascovin_prefix}}{{observation_from_jcb}}{{atm_obsbiascovin_suffix}}"
        inflation:
          ratio: 1.1
          ratio for small dataset: 2.0
      output file: "{{atm_obsbiasout_path}}/{{atm_obsbiascovout_prefix}}{{observation_from_jcb}}{{atm_obsbiascovout_suffix}}"

  # Observation Filters (QC)
  # ------------------------
  obs filters:
  - filter: BlackList
    filter variables:
    - name: brightnessTemperature
      channels: *{{observation_from_jcb}}_simulated_channels
    action:
      name: assign error
      error function:
        name: ObsFunction/ObsErrorModelRamp
        channels: *{{observation_from_jcb}}_simulated_channels
        options:
          channels: *{{observation_from_jcb}}_simulated_channels
          xvar:
            name: ObsFunction/CLWRetSymmetricMW
            options:
              clwret_ch238: 1
              clwret_ch314: 2
              clwret_types: [ObsValue, HofX]
          x0: &{{observation_from_jcb}}_x0 [{{ get_satellite_variable(observation_from_jcb, "x0") }}]
          x1: &{{observation_from_jcb}}_x1 [{{ get_satellite_variable(observation_from_jcb, "x1") }}]
          err0: &{{observation_from_jcb}}_err0 [{{ get_satellite_variable(observation_from_jcb, "error") }}]
          err1: &{{observation_from_jcb}}_err1 [{{ get_satellite_variable(observation_from_jcb, "error_cld") }}]
  #  CLW Retrieval Check
  - filter: Bounds Check
    filter variables:
    - name: brightnessTemperature
      channels: 1-6, 15
    test variables:
    - name: ObsFunction/CLWRetMW
      options:
        clwret_ch238: 1
        clwret_ch314: 2
        clwret_types: [ObsValue]
    maxvalue: 999.0
    action:
      name: reject
  #  CLW Retrieval Check
  - filter: Bounds Check
    filter variables:
    - name: brightnessTemperature
      channels: 1-6, 15
    test variables:
    - name: ObsFunction/CLWRetMW
      options:
        clwret_ch238: 1
        clwret_ch314: 2
        clwret_types: [HofX]
    maxvalue: 999.0
    action:
      name: reject
  #  Hydrometeor Check (cloud/precipitation affected chanels)
  - filter: Bounds Check
    filter variables:
    - name: brightnessTemperature
      channels: *{{observation_from_jcb}}_simulated_channels
    test variables:
    - name: ObsFunction/HydrometeorCheckAMSUA
      channels: *{{observation_from_jcb}}_simulated_channels
      options:
        channels: *{{observation_from_jcb}}_simulated_channels
        obserr_clearsky: *{{observation_from_jcb}}_err0
        clwret_function:
          name: ObsFunction/CLWRetMW
          options:
            clwret_ch238: 1
            clwret_ch314: 2
            clwret_types: [ObsValue]
        obserr_function:
          name: ObsFunction/ObsErrorModelRamp
          channels: *{{observation_from_jcb}}_simulated_channels
          options:
            channels: *{{observation_from_jcb}}_simulated_channels
            xvar:
              name: ObsFunction/CLWRetSymmetricMW
              options:
                clwret_ch238: 1
                clwret_ch314: 2
                clwret_types: [ObsValue, HofX]
            x0: *{{observation_from_jcb}}_x0
            x1: *{{observation_from_jcb}}_x1
            err0: *{{observation_from_jcb}}_err0
            err1: *{{observation_from_jcb}}_err1
    maxvalue: 0.0
    action:
      name: reject
  #  Topography check
  - filter: BlackList
    filter variables:
    - name: brightnessTemperature
      channels: *{{observation_from_jcb}}_simulated_channels
    action:
      name: inflate error
      inflation variable:
        name: ObsFunction/ObsErrorFactorTopoRad
        channels: *{{observation_from_jcb}}_simulated_channels
        options:
          sensor: *{{observation_from_jcb}}_sensor_id
          channels: *{{observation_from_jcb}}_simulated_channels
  #  Transmittnace Top Check
  - filter: BlackList
    filter variables:
    - name: brightnessTemperature
      channels: *{{observation_from_jcb}}_simulated_channels
    action:
      name: inflate error
      inflation variable:
        name: ObsFunction/ObsErrorFactorTransmitTopRad
        channels: *{{observation_from_jcb}}_simulated_channels
        options:
          sensor: *{{observation_from_jcb}}_sensor_id
          channels: *{{observation_from_jcb}}_simulated_channels
  #  Surface Jacobian check
  - filter: BlackList
    filter variables:
    - name: brightnessTemperature
      channels: *{{observation_from_jcb}}_simulated_channels
    action:
      name: inflate error
      inflation variable:
        name: ObsFunction/ObsErrorFactorSurfJacobianRad
        channels: *{{observation_from_jcb}}_simulated_channels
        options:
          sensor: *{{observation_from_jcb}}_sensor_id
          channels: *{{observation_from_jcb}}_simulated_channels
          obserr_demisf: [0.010, 0.020, 0.015, 0.020, 0.200]
          obserr_dtempf: [0.500, 2.000, 1.000, 2.000, 4.500]
  #  Situation dependent Check
  - filter: BlackList
    filter variables:
    - name: brightnessTemperature
      channels: *{{observation_from_jcb}}_simulated_channels
    action:
      name: inflate error
      inflation variable:
        name: ObsFunction/ObsErrorFactorSituDependMW
        channels: *{{observation_from_jcb}}_simulated_channels
        options:
          sensor: *{{observation_from_jcb}}_sensor_id
          channels: *{{observation_from_jcb}}_simulated_channels
          clwobs_function:
            name: ObsFunction/CLWRetMW
            options:
              clwret_ch238: 1
              clwret_ch314: 2
              clwret_types: [ObsValue]
          clwbkg_function:
            name: ObsFunction/CLWRetMW
            options:
              clwret_ch238: 1
              clwret_ch314: 2
              clwret_types: [HofX]
              bias_application: HofX
          scatobs_function:
            name: ObsFunction/SCATRetMW
            options:
              scatret_ch238: 1
              scatret_ch314: 2
              scatret_ch890: 15
              scatret_types: [ObsValue]
              bias_application: HofX
          clwmatchidx_function:
            name: ObsFunction/CLWMatchIndexMW
            channels: *{{observation_from_jcb}}_simulated_channels
            options:
              channels: *{{observation_from_jcb}}_simulated_channels
              clwobs_function:
                name: ObsFunction/CLWRetMW
                options:
                  clwret_ch238: 1
                  clwret_ch314: 2
                  clwret_types: [ObsValue]
              clwbkg_function:
                name: ObsFunction/CLWRetMW
                options:
                  clwret_ch238: 1
                  clwret_ch314: 2
                  clwret_types: [HofX]
                  bias_application: HofX
              clwret_clearsky: *{{observation_from_jcb}}_x0
          obserr_function:
            name: ObsFunction/ObsErrorModelRamp
            channels: *{{observation_from_jcb}}_simulated_channels
            options:
              channels: *{{observation_from_jcb}}_simulated_channels
              xvar:
                name: ObsFunction/CLWRetSymmetricMW
                options:
                  clwret_ch238: 1
                  clwret_ch314: 2
                  clwret_types: [ObsValue, HofX]
              x0: *{{observation_from_jcb}}_x0
              x1: *{{observation_from_jcb}}_x1
              err0: *{{observation_from_jcb}}_err0
              err1: *{{observation_from_jcb}}_err1
          obserr_clearsky: *{{observation_from_jcb}}_err0
  #  Gross check
  - filter: Background Check
    filter variables:
    - name: brightnessTemperature
      channels: *{{observation_from_jcb}}_simulated_channels
    function absolute threshold:
    - name: ObsFunction/ObsErrorBoundMW
      channels: *{{observation_from_jcb}}_simulated_channels
      options:
        sensor: *{{observation_from_jcb}}_sensor_id
        channels: *{{observation_from_jcb}}_simulated_channels
        obserr_bound_latitude:
          name: ObsFunction/ObsErrorFactorLatRad
          options:
            latitude_parameters: [25.0, 0.25, 0.04, 3.0]
        obserr_bound_transmittop:
          name: ObsFunction/ObsErrorFactorTransmitTopRad
          channels: *{{observation_from_jcb}}_simulated_channels
          options:
            channels: *{{observation_from_jcb}}_simulated_channels
        obserr_bound_topo:
          name: ObsFunction/ObsErrorFactorTopoRad
          channels: *{{observation_from_jcb}}_simulated_channels
          options:
            channels: *{{observation_from_jcb}}_simulated_channels
            sensor: *{{observation_from_jcb}}_sensor_id
        obserr_function:
          name: ObsFunction/ObsErrorModelRamp
          channels: *{{observation_from_jcb}}_simulated_channels
          options:
            channels: *{{observation_from_jcb}}_simulated_channels
            xvar:
              name: ObsFunction/CLWRetSymmetricMW
              options:
                clwret_ch238: 1
                clwret_ch314: 2
                clwret_types: [ObsValue, HofX]
                bias_application: HofX
            x0: *{{observation_from_jcb}}_x0
            x1: *{{observation_from_jcb}}_x1
            err0: *{{observation_from_jcb}}_err0
            err1: *{{observation_from_jcb}}_err1
        obserr_bound_max: [{{ get_satellite_variable(observation_from_jcb, "ermax") }}]
    action:
      name: reject
  #  Inter-channel check
  - filter: Bounds Check
    filter variables:
    - name: brightnessTemperature
      channels: *{{observation_from_jcb}}_simulated_channels
    test variables:
    - name: ObsFunction/InterChannelConsistencyCheck
      channels: *{{observation_from_jcb}}_simulated_channels
      options:
        channels: *{{observation_from_jcb}}_simulated_channels
        sensor: *{{observation_from_jcb}}_sensor_id
        use_flag: &{{observation_from_jcb}}_active_channels [{{ get_satellite_variable(observation_from_jcb, "active") }}]
    maxvalue: 1.0e-12
    action:
      name: reject
  #  Useflag check
  - filter: Bounds Check
    filter variables:
    - name: brightnessTemperature
      channels: *{{observation_from_jcb}}_simulated_channels
    test variables:
    - name: ObsFunction/ChannelUseflagCheckRad
      channels: *{{observation_from_jcb}}_simulated_channels
      options:
        sensor: *{{observation_from_jcb}}_sensor_id
        channels: *{{observation_from_jcb}}_simulated_channels
        use_flag: *{{observation_from_jcb}}_active_channels
    minvalue: 1.0e-12
    action:
      name: reject


  # GeoVaLs for Driving Observation Operators (testing mode)
  # --------------------------------------------------------
  geovals:
    filename: "{{atm_obsdatain_path}}/{{atm_obsdatain_prefix}}{{observation_from_jcb}}_geoval{{atm_obsdatain_suffix}}"

  # Passed benchmark for UFO testing
  # --------------------------------
  passedBenchmark: 0
